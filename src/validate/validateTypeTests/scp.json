[
  {
    "name": "Valid SCP",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Action": "s3:GetObject",
          "Resource": "arn:aws:s3:::my_corporate_bucket"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "Cannot contain Principal",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Action": "s3:GetObject",
          "Resource": "arn:aws:s3:::my_corporate_bucket",
          "Principal": "*"
        }
      ]
    },
    "expectedErrors": [
      {
        "message": "Principal is not allowed in a service control policy",
        "path": "Statement[0].#Principal"
      }
    ]
  },
  {
    "name": "Cannot contain NotPrincipal",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Action": "s3:GetObject",
          "Resource": "arn:aws:s3:::my_corporate_bucket",
          "NotPrincipal": "*"
        }
      ]
    },
    "expectedErrors": [
      {
        "message": "NotPrincipal is not allowed in a service control policy",
        "path": "Statement[0].#NotPrincipal"
      }
    ]
  },
  {
    "name": "NotResource is allowed",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Action": "s3:GetObject",
          "NotResource": "arn:aws:s3:::my_corporate_bucket"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "Resource or NotResource is Required",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "NotAction": "s3:GetObject"
        }
      ]
    },
    "expectedErrors": [
      {
        "path": "Statement[0]",
        "message": "One of Resource or NotResource is required in a service control policy"
      }
    ]
  },
  {
    "name": "Action or NotAction is Required",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Resource": "arn:aws:s3:::my_corporate_bucket"
        }
      ]
    },
    "expectedErrors": [
      {
        "path": "Statement[0]",
        "message": "One of Action or NotAction is required in a service control policy"
      }
    ]
  },
  {
    "name": "Action Asterisk can be at end of string",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Resource": "arn:aws:s3:::my_corporate_bucket",
          "Action": "s3:Get*"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "Action Asterisk Can be at the beginning of string",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Resource": "arn:aws:s3:::my_corporate_bucket",
          "Action": "s3:*Get*"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "Action Question Mark Can be at beginning of string",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Resource": "arn:aws:s3:::my_corporate_bucket",
          "Action": "s3:?Get?"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "NotAction Asterisk can be anywhere in string",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Resource": "arn:aws:s3:::my_corporate_bucket",
          "NotAction": "s3:*Get*"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "NotAction Question Mark can be anywhere in string",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Resource": "arn:aws:s3:::my_corporate_bucket",
          "NotAction": "s3:?Get?"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "Allow Statement can have specific Resource",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Allow",
          "Resource": "arn:aws:s3:::my_corporate_bucket",
          "Action": "s3:GetBucket"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "Allow Statement can have asterisk in Resource",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Allow",
          "Resource": "*",
          "Action": "s3:GetBucket"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "NotAction is allowed in a Deny statement",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Resource": "*",
          "NotAction": "s3:GetBucket"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "NotAction is allowed in an Allow statement",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Allow",
          "Resource": "*",
          "NotAction": "s3:GetBucket"
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "Condition is allowed in a Deny statement",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Deny",
          "Resource": "*",
          "Action": "s3:GetBucket",
          "Condition": {
            "StringEquals": {
              "s3:prefix": "home/"
            }
          }
        }
      ]
    },
    "expectedErrors": []
  },
  {
    "name": "Condition is now allowed in an Allow statement",
    "policy": {
      "Statement": [
        {
          "Sid": "AllowGetObject",
          "Effect": "Allow",
          "Resource": "*",
          "Action": "s3:GetBucket",
          "Condition": {
            "StringEquals": {
              "s3:prefix": "home/"
            }
          }
        }
      ]
    },
    "expectedErrors": []
  }
]
